<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/data/repository http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd
    http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<!-- Repositories For DAO Layer, use to perform CRUD operations on Entities -->
	<jpa:repositories base-package="com.sony.radio.rest.client.repo" />

	<!-- Package to Scan For Manager Components -->
	<context:component-scan base-package="com.sony.radio.rest.client.manager" />

	<!-- Package to Scan For Smart DAO Components -->
	<context:component-scan base-package="com.sony.radio.rest.client.dao" />

	<!-- Package to Scan For Smart DAO Components -->
	<context:component-scan base-package="com.sony.radio.rest.client.domain" />


	<!-- BEGIN: Spring Data JPA Configuration For RadioPromo DB <bean class="org.springframework.jndi.JndiObjectFactoryBean" 
		id="dataSource"> <property name="jndiName" value="java:jboss/DataSource/radioPromoDS" 
		/> </bean> -->

	<bean id="entityManager"
		class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean class="org.springframework.orm.jpa.JpaTransactionManager"
		id="transactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		id="dataSource">
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="jdbc:postgresql://localhost:5432/restclienttest" />
		<property name="username" value="postgres" />
		<property name="password" value="psony123" />
	</bean>

	<bean
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		id="entityManagerFactory">
		<property name="persistenceUnitName" value="persistenceUnitRP" />
		<property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
	</bean>
	<!-- END: Spring Data JPA Configuration For RadioPromo DB -->

	<!-- BEGIN: Spring JDBC Configuration For SMART DB -->

	<!-- <bean class="org.springframework.jndi.JndiObjectFactoryBean" id="dataSourceSmart"> 
		<property name="jndiName" value="java:jboss/DataSource/smartDS" /> </bean> 
		<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"> 
		<property name="dataSource" ref="dataSourceSmart"></property> </bean> -->
	<!-- END: Spring JDBC Configuration For SMART DB -->
	<!-- <bean id="webexpressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" 
		/> -->
	<!-- For File Upload <bean id="filterMultipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
		setting maximum upload size <property name="maxUploadSize" value="1048576000" 
		/> </bean> -->
</beans>
